version: "3.9"

services:
  application:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: runtime  # Use the runtime stage from multi-stage build
      args:
        - ENVIRONMENT=dev
        - poetryargs=--with dev  # Include dev dependencies for development
    restart: on-failure
    volumes:
      # For development, mount source code for live reloading
      - ./src:/app/src
      - ./migrations:/app/migrations
      - ./alembic.ini:/app/alembic.ini
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DEBUG=true
      - DB_ECHO=true
      - REDIS_HOST=redis
    command:
      ["python", "-m", "app"]

  db:
    image: postgres:14
    restart: on-failure
    environment:
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 1s
      timeout: 5s
      retries: 15

  redis:
    image: redis:8.2.2-bookworm
    restart: on-failure
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5
